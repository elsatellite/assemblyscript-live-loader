export function add(a: i32, b: i32): i32 {
    return a + b;
}

export function subtract(a: i32, b: i32): i32 {
    return a - b;
}

export function multiply(a: i32, b: i32): i32 {
    return a * b;
}

export function divide(a: i32, b: i32): i32 {
    return a / b;
}

export function factorial(num: i32): i32 {
    let tmp = num;

    if (num < 0) {
        return -1;
    } else if (num == 0) {
        return 1;
    }

    while (num > 2) {
        tmp *= num;
        num -= 1;
    }

    return tmp;
}

export function addWithLoopCount(count: i32, a: i32, b: i32): void {
    for (let i = 0; i < count; i += 1) {
        add(a, b);
    }
}

export function subtractWithLoopCount(count: i32, a: i32, b: i32): void {
    for (let i = 0; i < count; i += 1) {
        subtract(a, b);
    }
}

export function multiplyWithLoopCount(count: i32, a: i32, b: i32): void {
    for (let i = 0; i < count; i += 1) {
        multiply(a, b);
    }
}

export function divideWithLoopCount(count: i32, a: i32, b: i32): void {
    for (let i = 0; i < count; i += 1) {
        divide(a, b);
    }
}

export function factorialWithLoopCount(count: i32, num: i32): void {
    for (let i = 0; i < count; i += 1) {
        factorial(num);
    }
}
